import express from "express";
import cors from "cors";
import swaggerJsdoc from "swagger-jsdoc";
import swaggerUi from "swagger-ui-express";

const app = express();
const port = process.env.PORT || 3000;

const corsOptions = {
  origin: "*",
  methods: "GET,HEAD,PUT,PATCH,POST,DELETE",
  preflightContinue: false,
  optionsSuccessStatus: 204,
};

app.use(cors(corsOptions));

const swaggerOptions = {
  swaggerDefinition: {
    openapi: "3.0.0",
    info: {
      title: "L'API de la M√®re No√´l",
      version: "1.0.0",
      description: "La doc de l'incroyable API de la M√®re No√´l ! ü§∂üéÑ",
    },
    servers: [
      {
        url: `http://localhost:${port}`,
      },
    ],
  },
  apis: ["./index.js"], // Path to the API docs
};

const swaggerDocs = swaggerJsdoc(swaggerOptions);
app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerDocs));

const dailycards = [
  {
    id: 1,
    title: "Miam!",
    description: "Pr√©pare un repas surprise pour un membre de ta famille.",
    theme: "famille",
  },
  {
    id: 2,
    title: "Int√©ressant...",
    description:
      "Partage un tutoriel ou une astuce de code avec un coll√®gue ou en ligne.",
    theme: "code",
  },
  {
    id: 3,
    title: "Disponible",
    description:
      "Propose de garder les enfants ou l‚Äôanimal d‚Äôun voisin en cas de besoin.",
    theme: "voisins",
  },
  {
    id: 4,
    title: "Respect & √©coute",
    description: "Prends le temps d‚Äô√©couter quelqu‚Äôun sans interrompre.",
    theme: "quotidien",
  },
  {
    id: 5,
    title: "Allez, on sort!",
    description: "Propose une promenade ou une activit√© ext√©rieure en famille.",
    theme: "famille",
  },
  {
    id: 6,
    title: "üíê",
    description: "Cueille et offre des fleurs de ton jardin √† un voisin.",
    theme: "voisins",
  },
  {
    id: 7,
    title: "Int√©ressant...",
    description:
      "Publie une astuce sur ton r√©seau social pr√©f√©r√© pour aider la communaut√© tech.",
    theme: "code",
  },
  {
    id: 8,
    title: "Soulagement",
    description: "Propose de porter les courses ou un colis √† un voisin √¢g√©.",
    theme: "voisins",
  },
  {
    id: 9,
    title: "De l'ordre!",
    description: "Aide un proche √† trier ses papiers ou organiser son espace.",
    theme: "famille",
  },
  {
    id: 10,
    title: "Geste simple",
    description:
      "Offre un caf√© ou une boisson chaude √† quelqu‚Äôun dans le besoin.",
    theme: "quotidien",
  },
  {
    id: 11,
    title: "B√™ta-test!",
    description: "Teste une fonctionnalit√© d√©velopp√©e par un(e) autre.",
    theme: "code",
  },
  {
    id: 12,
    title: "C'est du propre!",
    description:
      "Fais la lessive ou range la vaisselle sans qu‚Äôon te le demande.",
    theme: "famille",
  },
  {
    id: 13,
    title: "Pause m√©rit√©e",
    description:
      "Propose de garder les enfants pour offrir une pause aux parents.",
    theme: "voisins",
  },
  {
    id: 14,
    title: "On a le temps!",
    description: "Laisse passer une personne press√©e dans une file d‚Äôattente.",
    theme: "quotidien",
  },
  {
    id: 15,
    title: "Encadrement",
    description:
      "Propose d‚Äôaccompagner un(e) d√©butant(e) sur un projet simple.",
    theme: "code",
  },
  {
    id: 16,
    title: "Merci!",
    description:
      "√âcris une lettre ou un mot de remerciement √† un membre de ta famille.",
    theme: "famille",
  },
  {
    id: 17,
    title: "Petit mot doux",
    description:
      "D√©pose une carte ou un petit mot dans la bo√Æte aux lettres d‚Äôun voisin.",
    theme: "voisins",
  },
  {
    id: 18,
    title: "Surprise!",
    description: "Propose ton aide pour une t√¢che inattendue.",
    theme: "quotidien",
  },
  {
    id: 19,
    title: "Optimisation",
    description: "Relis et am√©liore le code d‚Äôun(e) camarade.",
    theme: "code",
  },
  {
    id: 20,
    title: "Place au jeu!",
    description: "Organise un jeu de soci√©t√© ou une activit√© en famille.",
    theme: "famille",
  },
  {
    id: 21,
    title: "Ressources partag√©es",
    description: "Partage un objet que tu utilises peu (outils, jeux, etc.).",
    theme: "voisins",
  },
  {
    id: 22,
    title: "Bon plan!",
    description:
      "Partage un tutoriel ou une astuce de code avec un coll√®gue ou en ligne.",
    theme: "code",
  },
  {
    id: 23,
    title: "M√™me pas un Chocoblast!",
    description: "Apporte une collation pour tes coll√®gues ou camarades.",
    theme: "quotidien",
  },
  {
    id: 24,
    title: "Magie de No√´l",
    description: "Appelle un parent √©loign√© pour prendre de ses nouvelles.",
    theme: "famille",
  },
  {
    id: 25,
    title: "Quel beau cadeau!",
    description: "Partage un souvenir d‚Äôenfance pour raviver de bons moments.",
    theme: "famille",
  },
];

const famillecards = [
  {
    title: "Appelle un parent √©loign√©",
    description: "Prendre des nouvelles d'un parent √©loign√©.",
  },
  {
    title: "Aide √† trier les papiers",
    description: "Aide un proche √† trier ses papiers.",
  },
  {
    title: "Pr√©pare un repas surprise",
    description: "Pr√©pare un repas surprise pour un membre de ta famille.",
  },
  {
    title: "Propose ton aide",
    description: "Propose ton aide pour un projet ou une t√¢che familiale.",
  },
  {
    title: "Partage un souvenir",
    description: "Partage un souvenir d‚Äôenfance pour raviver de bons moments.",
  },
  {
    title: "Range une pi√®ce",
    description: "Range une pi√®ce ou un espace pour soulager un proche.",
  },
  {
    title: "Offre une matin√©e",
    description: "Offre une matin√©e ou soir√©e sans √©crans en famille.",
  },
  {
    title: "Fais la lessive",
    description:
      "Fais la lessive ou range la vaisselle sans qu‚Äôon te le demande.",
  },
  {
    title: "Organise une soir√©e cin√©ma",
    description:
      "Organise une soir√©e cin√©ma maison avec un film pr√©f√©r√© de la famille.",
  },
  {
    title: "Pr√©pare un petit-d√©jeuner",
    description: "Pr√©pare un petit-d√©jeuner surprise pour tout le monde.",
  },
  {
    title: "Organise un jeu de soci√©t√©",
    description: "Organise un jeu de soci√©t√© ou une activit√© en famille.",
  },
  {
    title: "√âcris une lettre",
    description:
      "√âcris une lettre ou un mot de remerciement √† un membre de ta famille.",
  },
  {
    title: "Propose une promenade",
    description: "Propose une promenade ou une activit√© ext√©rieure en famille.",
  },
];

const codecards = [
  {
    title: "Partage un tutoriel",
    description:
      "Partage un tutoriel ou une astuce de code avec un coll√®gue ou en ligne.",
  },
  {
    title: "Relis et am√©liore",
    description: "Relis et am√©liore le code d‚Äôun(e) camarade.",
  },
  {
    title: "R√©ponds √† une question",
    description:
      "R√©ponds √† une question technique sur un forum ou une plateforme.",
  },
  {
    title: "Propose d‚Äôaccompagner",
    description:
      "Propose d‚Äôaccompagner un(e) d√©butant(e) sur un projet simple.",
  },
  {
    title: "Mets √† jour",
    description: "Mets √† jour la documentation d‚Äôun projet open-source.",
  },
  {
    title: "Offre 30 minutes",
    description:
      "Offre 30 minutes de mentoring √† un(e) codeur(euse) moins exp√©riment√©(e).",
  },
  {
    title: "Teste une fonctionnalit√©",
    description: "Teste une fonctionnalit√© d√©velopp√©e par un(e) autre.",
  },
  {
    title: "Apprends une nouvelle tech",
    description: "Apprends une nouvelle technologie et partage un r√©sum√©.",
  },
  {
    title: "Propose une id√©e",
    description:
      "Propose une id√©e pour am√©liorer un processus de travail collectif.",
  },
  {
    title: "Organise une petite session",
    description:
      "Organise une petite session de code en bin√¥me avec un(e) ami(e).",
  },
  {
    title: "Publie une astuce",
    description:
      "Publie une astuce sur ton r√©seau social pr√©f√©r√© pour aider la communaut√© tech.",
  },
  {
    title: "Partage un article",
    description: "Partage un article ou une ressource de programmation utile.",
  },
  {
    title: "Aide un(e) coll√®gue",
    description:
      "Aide un(e) coll√®gue/camarade en train de coder √† r√©soudre un bug.",
  },
];

const voisinscards = [
  {
    title: "Propose de porter",
    description: "Propose de porter les courses ou un colis √† un voisin √¢g√©.",
  },
  {
    title: "Partage une part",
    description: "Partage une part de g√¢teau ou un plat avec un voisin.",
  },
  {
    title: "√âcris un petit mot",
    description: "√âcris un petit mot de bienvenue √† un nouvel arrivant.",
  },
  {
    title: "Aide un voisin",
    description: "Aide un voisin √† jardiner, bricoler, etc.",
  },
  {
    title: "Porte les courses",
    description: "Propose de porter les courses √† un voisin √¢g√©.",
  },
  {
    title: "Offre un service",
    description:
      "Offre un service, comme arroser les plantes ou sortir les poubelles.",
  },
  {
    title: "Cr√©e une bo√Æte √† livres",
    description: "Cr√©e une bo√Æte √† livres commune dans ton voisinage.",
  },
  {
    title: "Organise un caf√©",
    description: "Organise un caf√© ou une petite r√©union entre voisins.",
  },
  {
    title: "Partage un objet",
    description: "Partage un objet que tu utilises peu (outils, jeux, etc.).",
  },
];

const quotidiencards = [
  {
    title: "Tiens la porte",
    description: "Tiens la porte ou aide quelqu‚Äôun avec ses affaires lourdes.",
  },
  {
    title: "Offre un caf√©",
    description:
      "Offre un caf√© ou une boisson chaude √† quelqu‚Äôun dans le besoin.",
  },
  {
    title: "Remercie sinc√®rement",
    description: "Remercie sinc√®rement un agent de service.",
  },
  {
    title: "Laisse passer",
    description: "Laisse passer une personne press√©e dans une file d‚Äôattente.",
  },
  {
    title: "Laisse un mot",
    description:
      "Laisse un mot d‚Äôencouragement dans un livre emprunt√© ou un endroit public.",
  },
  {
    title: "Mets de c√¥t√©",
    description:
      "Mets de c√¥t√© quelques v√™tements pour les donner √† une association.",
  },
  {
    title: "Paie un caf√©",
    description: "Paie un caf√© ou un repas en avance dans un caf√© solidaire.",
  },
  {
    title: "Encourage une personne",
    description: "Encourage une personne dans ses efforts ou son travail.",
  },
  {
    title: "Nettoie un espace",
    description: "Nettoie un espace commun ou ramasse un d√©chet sur le chemin.",
  },
  {
    title: "Apporte une collation",
    description: "Apporte une collation pour tes coll√®gues ou camarades.",
  },
  {
    title: "Prends le temps",
    description: "Prends le temps d‚Äô√©couter quelqu‚Äôun sans interrompre.",
  },
];

/**
 * @swagger
 * /api/dailycards:
 *   get:
 *     summary: Renvoi la liste compl√®te des dailycards
 *     responses:
 *       200:
 *         description: A list of dailycards
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   id:
 *                     type: integer
 *                   title:
 *                     type: string
 *                   content:
 *                     type: string
 */
app.get("/api/dailycards", (req, res) => {
  res.json(dailycards);
});

/**
 * @swagger
 * /api/dailycards/{id}:
 *   get:
 *     summary: Renvoie une card sp√©cifique en fonction de son ID
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: integer
 *         description: The ID of the dailycard
 *     responses:
 *       200:
 *         description: A single dailycard
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 id:
 *                   type: integer
 *                 title:
 *                   type: string
 *                 content:
 *                   type: string
 *       404:
 *         description: Dailycard not found
 */
app.get("/api/dailycards/:id", (req, res) => {
  const id = Number.parseInt(req.params.id);
  const dailycard = dailycards.find((card) => card.id === id);
  if (dailycard) {
    res.json(dailycard);
  } else {
    res.status(404).send("Dailycard not found");
  }
});

/**
 * @swagger
 * /api/famille:
 *   get:
 *     summary: Renvoie la liste compl√®te des cards du th√®me famille
 *     responses:
 *       200:
 *         description: A list of familleCards
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   title:
 *                     type: string
 *                   description:
 *                     type: string
 */
app.get("/api/famille", (req, res) => {
  res.json(famillecards);
});

/**
 * @swagger
 * /api/code:
 *   get:
 *     summary: Renvoie la liste compl√®te des cards du th√®me code
 *     responses:
 *       200:
 *         description: A list of codeCards
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   title:
 *                     type: string
 *                   description:
 *                     type: string
 */
app.get("/api/code", (req, res) => {
  res.json(codecards);
});

/**
 * @swagger
 * /api/voisins:
 *   get:
 *     summary: Renvoie la liste compl√®te des cards du th√®me voisins
 *     responses:
 *       200:
 *         description: A list of voisinsCards
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   title:
 *                     type: string
 *                   description:
 *                     type: string
 */
app.get("/api/voisins", (req, res) => {
  res.json(voisinscards);
});

/**
 * @swagger
 * /api/quotidien:
 *   get:
 *     summary: Renvoie la liste compl√®te des cards du th√®me quotidien
 *     responses:
 *       200:
 *         description: A list of quotidienCards
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   title:
 *                     type: string
 *                   description:
 *                     type: string
 */
app.get("/api/quotidien", (req, res) => {
  res.json(quotidiencards);
});

const getRandomElement = (array) =>
  array[Math.floor(Math.random() * array.length)];

/**
 * @swagger
 * /api/famille/random:
 *   get:
 *     summary: Renvoie une card al√©atoire du th√®me famille
 *     responses:
 *       200:
 *         description: A random familleCard
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 title:
 *                   type: string
 *                 description:
 *                   type: string
 */
app.get("/api/famille/random", (req, res) => {
  res.json(getRandomElement(famillecards));
});

/**
 * @swagger
 * /api/code/random:
 *   get:
 *     summary: Renvoie une card al√©atoire du th√®me code
 *     responses:
 *       200:
 *         description: A random codeCard
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 title:
 *                   type: string
 *                 description:
 *                   type: string
 */
app.get("/api/code/random", (req, res) => {
  res.json(getRandomElement(codecards));
});

/**
 * @swagger
 * /api/voisins/random:
 *   get:
 *     summary: Renvoi une card al√©atoire du th√®me voisins
 *     responses:
 *       200:
 *         description: A random voisinsCard
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 title:
 *                   type: string
 *                 description:
 *                   type: string
 */
app.get("/api/voisins/random", (req, res) => {
  res.json(getRandomElement(voisinscards));
});

/**
 * @swagger
 * /api/quotidien/random:
 *   get:
 *     summary: Renvoie une card al√©atoire du th√®me quotidien
 *     responses:
 *       200:
 *         description: A random quotidienCard
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 title:
 *                   type: string
 *                 description:
 *                   type: string
 */
app.get("/api/quotidien/random", (req, res) => {
  res.json(getRandomElement(quotidiencards));
});

app.get("/", (req, res) => {
  res.send(
    `Bienvenue sur l'API de l'incroyable M√®re No√´l ! ü§∂üéÑ N'h√©sitez pas √† consulter la doc sur /api-docs/`
  );
});

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`);
});

export default app;
